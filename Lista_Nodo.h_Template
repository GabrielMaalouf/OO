#pragma once

template<class T>
class Nodo{
    T elemento;
    Nodo* anterior;
    Nodo* proximo;

public:
    Nodo();
    Nodo(T elemento);

    void setElemento(T elemento);
    void setAnterior(Nodo* anterior);
    void setProximo(Nodo* proximo);

    Nodo* getAnterior();
    Nodo* getProximo();
    T getElemento();
};

template<class T>
Nodo<T>::Nodo(){
    anterior = proximo = nullptr;
}

template<class T>
Nodo<T>::Nodo(T elemento){
    this->elemento = elemento;
    anterior = proximo = nullptr;
}

template<class T>
void Nodo<T>::setElemento(T elemento){
    this->elemento = elemento;
}

template<class T>
void Nodo<T>::setAnterior(Nodo* anterior){
    this->anterior = anterior;
}

template<class T>
void Nodo<T>::setProximo(Nodo* proximo){
    this->proximo = proximo;
}

template<class T>
Nodo<T>* Nodo<T>::getAnterior(){
    return this->anterior;
}

template<class T>
Nodo<T>* Nodo<T>::getProximo(){
    return this->proximo;
}

template<class T>
T Nodo<T>::getElemento(){
    return this->elemento;
}
